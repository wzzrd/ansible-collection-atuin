## where to store your database, default is your system data directory
## linux/mac: ~/.local/share/atuin/history.db
## windows: %USERPROFILE%/.local/share/atuin/history.db
db_path = "{{ atuin_client_db_path }}"

## where to store your encryption key, default is your system data directory
## linux/mac: ~/.local/share/atuin/key
## windows: %USERPROFILE%/.local/share/atuin/key
key_path = "{{ atuin_client_key_path }}"

## where to store your auth session token, default is your system data directory
## linux/mac: ~/.local/share/atuin/session
## windows: %USERPROFILE%/.local/share/atuin/session
session_path = "{{ atuin_client_session_path }}"

## date format used, either "us" or "uk"
dialect = "{{ atuin_client_dialect }}"

## default timezone to use when displaying time
## either "l", "local" to use the system's current local timezone, or an offset
## from UTC in the format of "<+|->H[H][:M[M][:S[S]]]"
## for example: "+9", "-05", "+03:30", "-01:23:45", etc.
timezone = "{{ atuin_client_timezone }}"

## enable or disable automatic sync
auto_sync = {{ atuin_client_auto_sync | string | lower }}

## enable or disable automatic update checks
update_check = {{ atuin_client_update_check | string | lower }}

## address of the sync server
sync_address = "{{ atuin_client_sync_address }}"

## how often to sync history. note that this is only triggered when a command
## is ran, so sync intervals may well be longer
## set it to 0 to sync after every command
sync_frequency = "{{ atuin_client_sync_frequency }}"

## which search mode to use
## possible values: prefix, fulltext, fuzzy, skim
search_mode = "{{ atuin_client_search_mode }}"

## which filter mode to use
## possible values: global, host, session, directory
filter_mode = "{{ atuin_client_filter_mode }}"

## With workspace filtering enabled, Atuin will filter for commands executed
## in any directory within a git repository tree (default: false)
workspaces = {{ atuin_client_workspaces | string | lower }}

## which filter mode to use when atuin is invoked from a shell up-key binding
## the accepted values are identical to those of "filter_mode"
## leave unspecified to use same mode set in "filter_mode"
filter_mode_shell_up_key_binding = "{{ atuin_client_filter_mode_shell_up_key_binding }}"

## which search mode to use when atuin is invoked from a shell up-key binding
## the accepted values are identical to those of "search_mode"
## leave unspecified to use same mode set in "search_mode"
search_mode_shell_up_key_binding = "{{ atuin_client_search_mode_shell_up_key_binding }}"

## which style to use
## possible values: auto, full, compact
style = "{{ atuin_client_style }}"

## the maximum number of lines the interface should take up
## set it to 0 to always go full screen
inline_height = {{ atuin_client_inline_height }}

## Invert the UI - put the search bar at the top , Default to `false`
invert = {{ atuin_client_invert | string | lower }}

## enable or disable showing a preview of the selected command
## useful when the command is longer than the terminal width and is cut off
show_preview = {{ atuin_client_show_preview | string | lower }}

## what to do when the escape key is pressed when searching
## possible values: return-original, return-query
exit_mode = "{{ atuin_client_exit_mode }}"

## possible values: emacs, subl
word_jump_mode = "{{ atuin_client_word_jump_mode }}"

## characters that count as a part of a word
word_chars = "{{ atuin_client_word_chars }}"

## number of context lines to show when scrolling by pages
scroll_context_lines = {{ atuin_client_scroll_context_lines }}

## use ctrl instead of alt as the shortcut modifier key for numerical UI shortcuts
## alt-0 .. alt-9
ctrl_n_shortcuts = {{ atuin_client_ctrl_n_shortcuts | string | lower }}

## default history list format - can also be specified with the --format arg
history_format = "{{ atuin_client_history_format }}"

## prevent commands matching any of these regexes from being written to history.
## Note that these regular expressions are unanchored, i.e. if they don't start
## with ^ or end with $, they'll match anywhere in the command.
## For details on the supported regular expression syntax, see
## https://docs.rs/regex/latest/regex/#syntax
history_filter = {{ atuin_client_history_filter }}

## prevent commands run with cwd matching any of these regexes from being written
## to history. Note that these regular expressions are unanchored, i.e. if they don't
## start with ^ or end with $, they'll match anywhere in CWD.
## For details on the supported regular expression syntax, see
## https://docs.rs/regex/latest/regex/#syntax
cwd_filter = {{ atuin_client_cwd_filter }}

## Configure the maximum height of the preview to show.
## Useful when you have long scripts in your history that you want to distinguish
## by more than the first few lines.
max_preview_height = {{ atuin_client_max_preview_height }}

## Configure whether or not to show the help row, which includes the current Atuin
## version (and whether an update is available), a keymap hint, and the total
## amount of commands in your history.
show_help = {{ atuin_client_show_help | string | lower }}

## Defaults to true. This matches history against a set of default regex, and will not save it if we get a match. Defaults include
## 1. AWS key id
## 2. Github pat (old and new)
## 3. Slack oauth tokens (bot, user)
## 4. Slack webhooks
## 5. Stripe live/test keys
secrets_filter = {{ atuin_client_secrets_filter | string | lower }}

## Defaults to true. If enabled, upon hitting enter Atuin will immediately execute the command. Press tab to return to the shell and edit.
# This applies for new installs. Old installs will keep the old behaviour unless configured otherwise.
enter_accept = {{ atuin_client_enter_accept | string | lower }}


## Defaults to "emacs".  This specifies the keymap on the startup of `atuin
## search`.  If this is set to "auto", the startup keymap mode in the Atuin
## search is automatically selected based on the shell's keymap where the
## keybinding is defined.  If this is set to "emacs", "vim-insert", or
## "vim-normal", the startup keymap mode in the Atuin search is forced to be
## the specified one.
keymap_mode = "{{ atuin_client_keymap_mode }}"

## Cursor style in each keymap mode.  If specified, the cursor style is changed
## in entering the cursor shape.  Available values are "default" and
## "{blink,steady}-{block,underilne,bar}".
keymap_cursor = {{ atuin_client_keymap_cursor }}

# network_connect_timeout = 5
network_timeout = {{ atuin_client_network_timeout }}

## Timeout (in seconds) for acquiring a local database connection (sqlite)
local_timeout = {{ atuin_client_local_timeout }}

## Set this to true and Atuin will minimize motion in the UI - timers will not update live, etc.
## Alternatively, set env NO_MOTION=true
prefers_reduced_motion = {{ atuin_client_prefers_reduced_motion | string | lower }}

#[stats]
# Set commands where we should consider the subcommand for statistics. Eg, kubectl get vs just kubectl
common_subcommands = {{ atuin_client_common_subcommands }}

# Set commands that should be totally stripped and ignored from stats
common_prefix = {{ atuin_client_common_prefix }}
